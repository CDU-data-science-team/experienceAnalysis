% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_filter_null.R
\name{tidy_filter_null}
\alias{tidy_filter_null}
\title{Filter data frame when filter can be \code{NULL}}
\usage{
tidy_filter_null(
  x,
  filter_value = NULL,
  filter_how = c("==", ">=", ">", "<=", "<", "in")
)
}
\arguments{
\item{x}{A string or vector of strings with the column name(s) to apply the
filter on.}

\item{filter_value}{A value (or vector when \code{filter_how == "in"}) to filter
by.}

\item{filter_how}{A string with the filtering operation: "==", ">=", ">",
"<=", "<" or "in", where "in" is for applying vector filters with \code{\%in\%}.}
}
\value{
The filtered data frame or the original data frame when
\code{filter_value} is \code{NULL} or \code{NA}.
}
\description{
For use inside \code{dplyr::filter()} operations where sometimes it is desired to
filter nothing.
}
\details{
This function is useful when there is a \code{dplyr::filter()} operation
on a data frame but it is not always desirable to filter the data frame.
A good example is a \code{Shiny} dashboard that returns a plot or table of the
filtered data or of the whole dataset, depending on the input from the
user.
}
\examples{
library(experienceAnalysis)
# Filter gear and carb to be 2 or 3
mtcars \%>\%
  dplyr::filter(
    dplyr::across(
      c("gear", "carb"),
      ~ experienceAnalysis::tidy_filter_null(., filter_value = 2:3,
                                              filter_how = "in")
    )
)

# Filter nothing (returns original data frame)
mtcars \%>\%
  dplyr::filter(
    dplyr::across(
      c("gear", "carb"),
      ~ experienceAnalysis::tidy_filter_null(., filter_value = NULL)
    )
)
}
